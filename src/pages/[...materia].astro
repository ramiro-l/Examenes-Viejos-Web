---
import Layout from "@/layouts/Layout.astro";
import { Badge } from "@/components/ui/badge";
import TabsExamenes from "@/components/TabsExamenes.astro";
import { Icon } from "astro-icon/components";

import {
    MateriaRepository,
    parse_curtimestre_number_to_text,
} from "@/services/examenes/materia_repository";

import carreras from "@/data/carreras.json";
import materias from "@/data/materias.json";
import type { Materia } from "@/models/materia";
import type { Carrera } from "@/models/carrera";
import type { Examen } from "@/models/examen";

interface paramsType {
    params: {
        materia: string;
    };
    props: {
        carrera: Carrera;
        materia: Materia;
    };
}

// Create the static paths for the materias:
export function getStaticPaths() {
    const params: paramsType[] = [];
    const carreras_data = carreras as Carrera[];
    const materias_data = materias as Materia[];

    for (let i = 0; i < carreras_data.length; i++) {
        const carrera = carreras_data[i];

        const materias_carrera = materias_data.filter((m) => m.carreras.includes(carrera.code));

        for (let j = 0; j < materias_carrera.length; j++) {
            const materia = materias_carrera[j];
            params.push({
                params: {
                    materia: `${carrera.code}/${materia.code}`,
                },
                props: {
                    carrera: carrera,
                    materia: materia,
                },
            });
        }
    }
    return params;
}

const { carrera, materia } = Astro.props;

const materiaRepository = new MateriaRepository(materia.repo_examenes, materia.path);

await materiaRepository.fetchContent();
materiaRepository.sortExamsByDate();

const finales: Examen[] = materiaRepository.getExamsByType("Final");
const parciales: Examen[][] = materiaRepository.getExamsParcialesForNumber();
const otros: Examen[] = materiaRepository.getExamsByType("Otro");
otros.concat(parciales[0]); // In this position are the parciales without or weird numbers.
parciales.shift();

const tabs = [{ title: "Finales", key: "finales", examenes: finales, shorTitle: "FINALES" }];

tabs.push(
    ...parciales.map((parciales, index) => ({
        title: `Parcial ${index + 1}`,
        key: `parcial-${index + 1}`,
        examenes: parciales,
        shorTitle: `P${index + 1}`,
    })),
);
tabs.push({ title: "Otros", key: "otros", examenes: otros, shorTitle: "OTROS" });
---

<Layout
    title={`Examenes Viejos FaMAF | ${materia.name}`}
    metaImage="https://i.ibb.co/kKv1B9z/Banner-Examenes-Viejos.png"
    metaDescription="Esta pagina es una interfaz para ver los examenes viejos del repositorio de github"
    metaKeywords="examenes, viejos, famaf, computacion"
>
    <h1 class="text-balance text-4xl">{materia.name}</h1>

    <div class="my-2 max-sm:flex max-sm:flex-col">
        <a href={materia.repo_examenes} target="_blank" rel="noopener noreferrer">
            <Badge className="my-1 max-sm:flex max-sm:w-full max-sm:justify-between">
                <p>Repositorio</p>
                <Icon name="carbon:logo-github" size={16} class="ml-2" />
            </Badge>
        </a>
        <Badge className="my-1 max-sm:w-full" variant="outline">{carrera.facultad}</Badge>
        <Badge className="my-1 max-sm:w-full" variant="outline">{carrera.name} </Badge>
        <Badge className="my-1 max-sm:w-full" variant="outline">{materia.anio}º año</Badge>
        <Badge className="my-1 max-sm:w-full" variant="outline"
            >{parse_curtimestre_number_to_text(materia.cuatrimestre)} cuatrimestre</Badge
        >
    </div>
    <br />
    <TabsExamenes tabs={tabs} />
    <br />
</Layout>
